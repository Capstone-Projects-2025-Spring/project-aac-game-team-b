"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[3578],{85757:e=>{e.exports=JSON.parse('{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction : Bridging Social Gaps Through AAC and Collaborative Play","href":"/project-aac-game-team-b/docs/intro","docId":"intro","unlisted":false},{"type":"category","label":"Requirements Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"System Overview","href":"/project-aac-game-team-b/docs/requirements/system-overview","docId":"requirements/system-overview","unlisted":false},{"type":"link","label":"System Block Diagram","href":"/project-aac-game-team-b/docs/requirements/system-block-diagram","docId":"requirements/system-block-diagram","unlisted":false},{"type":"link","label":"General Requirements","href":"/project-aac-game-team-b/docs/requirements/general-requirements","docId":"requirements/general-requirements","unlisted":false},{"type":"link","label":"features-and-requirements","href":"/project-aac-game-team-b/docs/requirements/features-and-requirements","docId":"requirements/features-and-requirements","unlisted":false},{"type":"link","label":"Use-case descriptions","href":"/project-aac-game-team-b/docs/requirements/use-case-descriptions","docId":"requirements/use-case-descriptions","unlisted":false}],"href":"/project-aac-game-team-b/docs/category/requirements-specification"},{"type":"category","label":"System Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Design","href":"/project-aac-game-team-b/docs/system-architecture/Design","docId":"system-architecture/Design","unlisted":false},{"type":"link","label":"Development Environment","href":"/project-aac-game-team-b/docs/system-architecture/development-environment","docId":"system-architecture/development-environment","unlisted":false},{"type":"link","label":"Version Control","href":"/project-aac-game-team-b/docs/system-architecture/version-control","docId":"system-architecture/version-control","unlisted":false}],"href":"/project-aac-game-team-b/docs/category/system-architecture"},{"type":"category","label":"API Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"1. Frontend API Documentation","href":"/project-aac-game-team-b/docs/api-specification/frontendDocumentation","docId":"api-specification/frontendDocumentation","unlisted":false},{"type":"link","label":"2. Backend API Documentation","href":"/project-aac-game-team-b/docs/api-specification/backendDocumentation","docId":"api-specification/backendDocumentation","unlisted":false}],"href":"/project-aac-game-team-b/docs/category/api-specification"},{"type":"category","label":"Test Procedures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Unit tests","href":"/project-aac-game-team-b/docs/testing/unit-testing","docId":"testing/unit-testing","unlisted":false},{"type":"link","label":"Integration tests","href":"/project-aac-game-team-b/docs/testing/integration-testing","docId":"testing/integration-testing","unlisted":false},{"type":"link","label":"Acceptance test","href":"/project-aac-game-team-b/docs/testing/acceptence-testing","docId":"testing/acceptence-testing","unlisted":false}],"href":"/project-aac-game-team-b/docs/category/test-procedures"}]},"docs":{"api-specification/backendDocumentation":{"id":"api-specification/backendDocumentation","title":"2. Backend API Documentation","description":"2.1 FirebaseController","sidebar":"docsSidebar"},"api-specification/frontendDocumentation":{"id":"api-specification/frontendDocumentation","title":"1. Frontend API Documentation","description":"Documentation for the frontend classes in Story Quest.","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction : Bridging Social Gaps Through AAC and Collaborative Play","description":"Augmentative and Alternative Communication (AAC) refers to any method of communication that replaces or supports verbal speech.","sidebar":"docsSidebar"},"requirements/features-and-requirements":{"id":"requirements/features-and-requirements","title":"features-and-requirements","description":"Features","sidebar":"docsSidebar"},"requirements/general-requirements":{"id":"requirements/general-requirements","title":"General Requirements","description":"Frontend (Client)","sidebar":"docsSidebar"},"requirements/system-block-diagram":{"id":"requirements/system-block-diagram","title":"System Block Diagram","description":"System Block Diagram","sidebar":"docsSidebar"},"requirements/system-overview":{"id":"requirements/system-overview","title":"System Overview","description":"Project Abstract","sidebar":"docsSidebar"},"requirements/use-case-descriptions":{"id":"requirements/use-case-descriptions","title":"Use-case descriptions","description":"Use Case 1: Room Management - Setting up a new room","sidebar":"docsSidebar"},"system-architecture/Design":{"id":"system-architecture/Design","title":"Design","description":"Purpose","sidebar":"docsSidebar"},"system-architecture/development-environment":{"id":"system-architecture/development-environment","title":"Development Environment","description":"Documentation:","sidebar":"docsSidebar"},"system-architecture/version-control":{"id":"system-architecture/version-control","title":"Version Control","description":"This project will be managed by Git and Github. We have protected our main branch meaning that every pull request needs to be reviewed and approved. Each part of the application is made in a separate branch with a relevant name that corresponds to the feature that is being made.","sidebar":"docsSidebar"},"testing/acceptence-testing":{"id":"testing/acceptence-testing","title":"Acceptance test","description":"Demonstration of all of the functional and non-functional requirements. This can be a combination of automated tests derived from the use-cases (user stories) and manual tests with recorded observation of the results.","sidebar":"docsSidebar"},"testing/integration-testing":{"id":"testing/integration-testing","title":"Integration tests","description":"Tests to demonstrate each use-case based on the use-case descriptions and the sequence diagrams. External input","sidebar":"docsSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit tests","description":"(For each method, one or more test cases. A test case consists of input parameter values and expected results.","sidebar":"docsSidebar"}}}}')}}]);